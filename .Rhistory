ct[["p.value"]]
summary(model <-  lm(sequenceProp ~ countProp, data = pol_p) )
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
hist(pol_p$adjSeqProp)
options(scipen = 999)
ct <- cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall")
ct[["p.value"]]
summary ( ct <-cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall") )
summary( ct <-cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall") )
ct
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(here)
library(tidyverse)
library(bookdown)
library(knitr)
suppressWarnings(library(kableExtra))
pNumC <- function(...) prettyNum(...,big.mark = ',')
prcnt_detect <- function(x, Lprop, Hprop){
if(missing(Lprop)){Lprop <- 0}
y <- x[x$Prop > Lprop & x$Prop < Hprop,]; total <- nrow(y)
detected <- round((nrow(y[y$DETECTED == 1,])/total) * 100, 1)
Mdn <- round(median(y$Prop),3)
r <- paste0('were detected in ',  detected,
'% of samples where the proportion of target grains were between ',
Lprop, '-', Hprop,  ' (n = ', total, ' Mdn = ', Mdn, ')')
return(r)
}
files <- list.files('/hdd/MS_SDM_RMBL/SDMS_RMBL/results/maps', pattern = 'tif$')
ml <- files[grep( '_ml_', files)]
ml <- unique(sub('_ml.*$', '', ml)) # ensure we do not have dupes
linear <- files[grep('_glm_', files)]
linear <- unique(sub('_glm.*$', '', linear))
# setdiff(linear, ml) # Barbarea vulgaris, epilobium lactiflorum not modelled with ml
# setdiff(ml, linear) # ericameria parryi not modelled with 'linear regression'
rm(files, ml, linear)
logR_dat <- read.csv('../data/PA_records_logistic_regression.csv')[,2:4] %>%
filter(occurrence == 0)
# summary(logR_dat$n)
# sum(logR_dat$n)
dat <- read.csv('../data/evaluation_table.csv')[,2:3]
data.frame(Metric  = dat[1:5,1],
Value   = dat[1:5,2],
Metric1 = dat[6:10,1],
Value1  = dat[6:10,2]
) %>%
knitr::kable(caption = "Logistic regression assessing accuracy of SDMs",
col.names = c('Metric', 'Value', 'Metric', 'Value'),
booktabs = T) #%>%
#kableExtra::kable_styling(position = "float_right")
read.csv('../data/Pa_conting_table.csv') %>%
knitr::kable(caption = "Species Distribution Modeling evaluation contingency table",
col.names = c('', ' Absence ', '  Presence  ', ' Absence ', ' Presence '), align = "lrrrr",
booktabs = T) %>%
add_header_above(c(" " = 1, "Training" = 2, "Testing" = 2))
rm(logR_dat, dat)
# are mertensia and Asteraceae 1 & 2 detected in all Pollen samples where the bee was COLLECTED ON THEM ?
pmorph <- read.csv('../data/morpho_pollen.csv')
blst <- read.csv('../data/blast_seqs_classified.csv') %>%
group_by(sample.id) %>%
mutate(Prcnt_Seqs_Class = sum(Prcnt_seqs)) %>%
ungroup()
blst_seqs <- distinct(blst, sample.id)
pmorph <- filter(pmorph, sample.id %in% blst$sample.id) %>%
group_by(sample.id) %>%
mutate(Prop = sum/sum(sum))
mertensia_samples <- pmorph %>%
filter(morphotype == 'MERTENSIA') %>%
select(sample.id, morphotype, Prop, sum)
mertensia_samples <- filter(mertensia_samples, sample.id %in% blst_seqs$sample.id)
blst_mertensia <- blst %>%
filter(Genus == 'Mertensia') %>%
select(sample.id,  Prcnt_seqs, Seqs_pr_taxon, Total_seqs, Prcnt_seqs, Prcnt_Seqs_Class) %>%
group_by(sample.id) %>%
mutate(Prcnt_seqs = sum(Prcnt_seqs),
morphotype = 'MERTENSIA') %>%
distinct(sample.id, .keep_all = T)
mertensia_detected <- mertensia_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_mertensia$sample.id, 1, 0))
# sample 26 - very strange !!!! this needs investigation - ALSO THE ERICOID IS LIKELY ONAGRAD !?
blst_aster <- blst %>%
filter(Family == 'Asteraceae') %>%
group_by(sample.id) %>%
distinct(sample.id, .keep_all = T)
# PERFORM FOR ERICACEAE TOO - A single record maybe come out?
ericaceae_samples <- pmorph %>%
filter(morphotype == 'ERICACEAE') %>%
select(sample.id, Prop, morphotype)
blst_ericoid <- filter(blst, Family == 'Ericaceae') %>% # 44 might be Epilobium anagallidolium
mutate(morphotype = 'ERICACEAE')
ericaceae_detected <- ericaceae_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_ericoid$sample.id, 1, 0))
# ASTER 2 HERE...
aster2_samples <- pmorph %>%
filter(morphotype == 'ASTERACEAE_2')
blst_aster2 <- filter(blst_aster, Genus %in%
c('Taraxacum', 'Helianthella', 'Scabrethia')) %>%
mutate(morphotype = 'ASTERACEAE_2')
aster2_detected <- aster2_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster2$sample.id, 1, 0))
# ASTER 1 HERE... ? WERE ALL OF THESE SPECIES PRUNED... ?
aster1_samples <- pmorph %>%
filter(morphotype == 'ASTERACEAE_1')
blst_aster1 <- filter(blst_aster, !Genus %in% c('Taraxacum', 'Helianthella',
'Scabrethia') ) %>%
mutate(morphotype = 'ASTERACEAE_1')
aster1_detected <- aster1_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster1$sample.id, 1, 0))
# ALL HIGH NUMBER ASTERACEAE
aster_samples <- pmorph %>%
filter(str_detect(morphotype, 'ASTER.*'))
aster_detected <- aster_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster$sample.id, 1, 0))
aa <- prcnt_detect(mertensia_detected, Lprop = 0.01, Hprop = 1)
bb <- prcnt_detect(aster1_detected, Lprop = 0.001, Hprop = 0.01)
cc <- prcnt_detect(aster2_detected, Lprop = 0.001, Hprop = 0.01)
dd <-  prcnt_detect(aster_detected, Lprop = 0.01, Hprop = 1)
ee <- prcnt_detect(ericaceae_detected, Lprop = 0.001, Hprop = 0.1)
# Semi-quantitative accord between sequence % and Grain Count
palyn_cnt <- bind_rows(aster1_samples, aster2_samples, ericaceae_samples, mertensia_samples) %>%
select(morphotype, countProp = Prop)
pollen_props <- bind_rows(blst_aster1, blst_aster2, blst_mertensia, blst_ericoid) %>%
select(morphotype, sequenceProp = Prcnt_seqs, Seqs_pr_taxon, Total_seqs, Prcnt_Seqs_Class) %>%
left_join(., palyn_cnt, by = c('sample.id', 'morphotype')) %>%
drop_na()
rm(mertensia_samples, blst, blst_aster, blst_aster1,
blst_aster2, aster1_samples,  aster2_samples, a, b, c, d, palyn_cnt,
blst_mertensia, aster_samples, ericaceae_samples, blst_ericoid)
rm(mertensia_detected, aster1_detected, aster2_detected, aster_detected)
knitr::include_graphics("../graphics/plots/rmbl_draft_tree.png")
raw_seqs <- read.delim('../data/raw_reads_metagenome_seq.txt', header = F) %>%
mutate(V1 = str_trim(V1)) %>%
separate(V1, c('seq', 'sampleFR'), sep = ' ') %>%
mutate(seq = round(as.numeric(seq)/4),
sample = str_extract(sampleFR, '.*L002_')) %>%
filter(sampleFR != 'total') %>%
group_by(sample) %>%
mutate(totalReads = sum(seq)) %>%
distinct(totalReads) %>%
pull(totalReads)
trimmed_seqs <- read.delim('../data/trimmed_reads_metagenome_seq.txt', header = F) %>%
mutate(V1 = str_trim(V1)) %>%
separate(V1, c('seq', 'sampleFR'), sep = ' ') %>%
mutate(seq = round(as.numeric(seq)/4),
sample = str_extract(sampleFR, '.*paired')) %>%
filter(sampleFR != 'total') %>%
group_by(sample) %>%
mutate(totalReads = sum(seq)) %>%
distinct(totalReads) %>%
pull(totalReads)
krak <- read.csv('../data/kraken_proc_reads.csv')
brack <- read.csv('../data/bracken_proc_reads.csv')
blast <- read.csv('../data/blast_proc_reads.csv')
loci <- read.csv('../data/reads_per_loci.csv') %>% group_by(Sample)
no_loci <- loci %>% group_by(Sample) %>% count(name = 'no_loci')
no_reads <- loci %>% group_by(loci) %>% summarize(readsLoci = sum(n))
rm( krak, brack, blast, loci, no_loci, aa, bb, cc, dd)
pol_p <- pollen_props %>%
mutate(sequenceProp = sequenceProp/100,
adjSeqProp = sequenceProp * (100/Prcnt_Seqs_Class))
ct <-cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall")
# ct[["p.value"]] too small to write out. tau > 0.4 strong relationship
summary(model <-  lm(sequenceProp ~ countProp, data = pol_p) )
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
round(ct[["estimate"]][["tau"]], 3)
nrow(pol_p)
View(pol_p)
ct <-cor.test(pol_p$countProp, pol_p$sequenceProp, method = "kendall")
# ct[["p.value"]] too small to write out. tau > 0.4 strong relationship
ct
round(ct[["estimate"]][["tau"]], 3)
pol_p <- pollen_props %>%
mutate(sequenceProp = sequenceProp/100,
adjSeqProp = sequenceProp * (100/Prcnt_Seqs_Class))
ct <-cor.test(pol_p$countProp, pol_p$sequenceProp, method = "kendall")
# ct[["p.value"]] too small to write out. tau > 0.4 strong relationship
summary(model <-  lm(sequenceProp ~ countProp, data = pol_p) )
round(ct[["estimate"]][["tau"]], 3)
nrow(pol_p)
round(ct[["estimate"]][["tau"]], 3)
pol_p <- pollen_props %>%
mutate(sequenceProp = sequenceProp/100,
adjSeqProp = sequenceProp * (100/Prcnt_Seqs_Class))
ct <-cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall")
# ct[["p.value"]] too small to write out. tau > 0.4 strong relationship
summary(model <-  lm(adjSeqProp ~ countProp, data = pol_p) )
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
rm(pol_p, newdat)
rm(pol_p, ct)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
ggplot(pol_p, aes(x = counProp, y = adjSeqProp)) +
geom_point() +
geom_smooth
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(here)
library(tidyverse)
library(bookdown)
library(knitr)
suppressWarnings(library(kableExtra))
pNumC <- function(...) prettyNum(...,big.mark = ',')
prcnt_detect <- function(x, Lprop, Hprop){
if(missing(Lprop)){Lprop <- 0}
y <- x[x$Prop > Lprop & x$Prop < Hprop,]; total <- nrow(y)
detected <- round((nrow(y[y$DETECTED == 1,])/total) * 100, 1)
Mdn <- round(median(y$Prop),3)
r <- paste0('were detected in ',  detected,
'% of samples where the proportion of target grains were between ',
Lprop, '-', Hprop,  ' (n = ', total, ' Mdn = ', Mdn, ')')
return(r)
}
files <- list.files('/hdd/MS_SDM_RMBL/SDMS_RMBL/results/maps', pattern = 'tif$')
ml <- files[grep( '_ml_', files)]
ml <- unique(sub('_ml.*$', '', ml)) # ensure we do not have dupes
linear <- files[grep('_glm_', files)]
linear <- unique(sub('_glm.*$', '', linear))
# setdiff(linear, ml) # Barbarea vulgaris, epilobium lactiflorum not modelled with ml
# setdiff(ml, linear) # ericameria parryi not modelled with 'linear regression'
rm(files, ml, linear)
logR_dat <- read.csv('../data/PA_records_logistic_regression.csv')[,2:4] %>%
filter(occurrence == 0)
# summary(logR_dat$n)
# sum(logR_dat$n)
dat <- read.csv('../data/evaluation_table.csv')[,2:3]
data.frame(Metric  = dat[1:5,1],
Value   = dat[1:5,2],
Metric1 = dat[6:10,1],
Value1  = dat[6:10,2]
) %>%
knitr::kable(caption = "Logistic regression assessing accuracy of SDMs",
col.names = c('Metric', 'Value', 'Metric', 'Value'),
booktabs = T) #%>%
#kableExtra::kable_styling(position = "float_right")
read.csv('../data/Pa_conting_table.csv') %>%
knitr::kable(caption = "Species Distribution Modeling evaluation contingency table",
col.names = c('', ' Absence ', '  Presence  ', ' Absence ', ' Presence '), align = "lrrrr",
booktabs = T) %>%
add_header_above(c(" " = 1, "Training" = 2, "Testing" = 2))
rm(logR_dat, dat)
# are mertensia and Asteraceae 1 & 2 detected in all Pollen samples where the bee was COLLECTED ON THEM ?
pmorph <- read.csv('../data/morpho_pollen.csv')
blst <- read.csv('../data/blast_seqs_classified.csv') %>%
group_by(sample.id) %>%
mutate(Prcnt_Seqs_Class = sum(Prcnt_seqs)) %>%
ungroup()
blst_seqs <- distinct(blst, sample.id)
pmorph <- filter(pmorph, sample.id %in% blst$sample.id) %>%
group_by(sample.id) %>%
mutate(Prop = sum/sum(sum))
mertensia_samples <- pmorph %>%
filter(morphotype == 'MERTENSIA') %>%
select(sample.id, morphotype, Prop, sum)
mertensia_samples <- filter(mertensia_samples, sample.id %in% blst_seqs$sample.id)
blst_mertensia <- blst %>%
filter(Genus == 'Mertensia') %>%
select(sample.id,  Prcnt_seqs, Seqs_pr_taxon, Total_seqs, Prcnt_seqs, Prcnt_Seqs_Class) %>%
group_by(sample.id) %>%
mutate(Prcnt_seqs = sum(Prcnt_seqs),
morphotype = 'MERTENSIA') %>%
distinct(sample.id, .keep_all = T)
mertensia_detected <- mertensia_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_mertensia$sample.id, 1, 0))
# sample 26 - very strange !!!! this needs investigation - ALSO THE ERICOID IS LIKELY ONAGRAD !?
blst_aster <- blst %>%
filter(Family == 'Asteraceae') %>%
group_by(sample.id) %>%
distinct(sample.id, .keep_all = T)
# PERFORM FOR ERICACEAE TOO - A single record maybe come out?
ericaceae_samples <- pmorph %>%
filter(morphotype == 'ERICACEAE') %>%
select(sample.id, Prop, morphotype)
blst_ericoid <- filter(blst, Family == 'Ericaceae') %>% # 44 might be Epilobium anagallidolium
mutate(morphotype = 'ERICACEAE')
ericaceae_detected <- ericaceae_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_ericoid$sample.id, 1, 0))
# ASTER 2 HERE...
aster2_samples <- pmorph %>%
filter(morphotype == 'ASTERACEAE_2')
blst_aster2 <- filter(blst_aster, Genus %in%
c('Taraxacum', 'Helianthella', 'Scabrethia')) %>%
mutate(morphotype = 'ASTERACEAE_2')
aster2_detected <- aster2_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster2$sample.id, 1, 0))
# ASTER 1 HERE... ? WERE ALL OF THESE SPECIES PRUNED... ?
aster1_samples <- pmorph %>%
filter(morphotype == 'ASTERACEAE_1')
blst_aster1 <- filter(blst_aster, !Genus %in% c('Taraxacum', 'Helianthella',
'Scabrethia') ) %>%
mutate(morphotype = 'ASTERACEAE_1')
aster1_detected <- aster1_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster1$sample.id, 1, 0))
# ALL HIGH NUMBER ASTERACEAE
aster_samples <- pmorph %>%
filter(str_detect(morphotype, 'ASTER.*'))
aster_detected <- aster_samples %>%
mutate(DETECTED = if_else(sample.id %in% blst_aster$sample.id, 1, 0))
aa <- prcnt_detect(mertensia_detected, Lprop = 0.01, Hprop = 1)
bb <- prcnt_detect(aster1_detected, Lprop = 0.001, Hprop = 0.01)
cc <- prcnt_detect(aster2_detected, Lprop = 0.001, Hprop = 0.01)
dd <-  prcnt_detect(aster_detected, Lprop = 0.01, Hprop = 1)
ee <- prcnt_detect(ericaceae_detected, Lprop = 0.001, Hprop = 0.1)
# Semi-quantitative accord between sequence % and Grain Count
palyn_cnt <- bind_rows(aster1_samples, aster2_samples, ericaceae_samples, mertensia_samples) %>%
select(morphotype, countProp = Prop)
pollen_props <- bind_rows(blst_aster1, blst_aster2, blst_mertensia, blst_ericoid) %>%
select(morphotype, sequenceProp = Prcnt_seqs, Seqs_pr_taxon, Total_seqs, Prcnt_Seqs_Class) %>%
left_join(., palyn_cnt, by = c('sample.id', 'morphotype')) %>%
drop_na()
rm(mertensia_samples, blst, blst_aster, blst_aster1,
blst_aster2, aster1_samples,  aster2_samples, a, b, c, d, palyn_cnt,
blst_mertensia, aster_samples, ericaceae_samples, blst_ericoid)
rm(mertensia_detected, aster1_detected, aster2_detected, aster_detected)
knitr::include_graphics("../graphics/plots/rmbl_draft_tree.png")
raw_seqs <- read.delim('../data/raw_reads_metagenome_seq.txt', header = F) %>%
mutate(V1 = str_trim(V1)) %>%
separate(V1, c('seq', 'sampleFR'), sep = ' ') %>%
mutate(seq = round(as.numeric(seq)/4),
sample = str_extract(sampleFR, '.*L002_')) %>%
filter(sampleFR != 'total') %>%
group_by(sample) %>%
mutate(totalReads = sum(seq)) %>%
distinct(totalReads) %>%
pull(totalReads)
trimmed_seqs <- read.delim('../data/trimmed_reads_metagenome_seq.txt', header = F) %>%
mutate(V1 = str_trim(V1)) %>%
separate(V1, c('seq', 'sampleFR'), sep = ' ') %>%
mutate(seq = round(as.numeric(seq)/4),
sample = str_extract(sampleFR, '.*paired')) %>%
filter(sampleFR != 'total') %>%
group_by(sample) %>%
mutate(totalReads = sum(seq)) %>%
distinct(totalReads) %>%
pull(totalReads)
krak <- read.csv('../data/kraken_proc_reads.csv')
brack <- read.csv('../data/bracken_proc_reads.csv')
blast <- read.csv('../data/blast_proc_reads.csv')
loci <- read.csv('../data/reads_per_loci.csv') %>% group_by(Sample)
no_loci <- loci %>% group_by(Sample) %>% count(name = 'no_loci')
no_reads <- loci %>% group_by(loci) %>% summarize(readsLoci = sum(n))
rm( krak, brack, blast, loci, no_loci, aa, bb, cc, dd)
pol_p <- pollen_props %>%
mutate(sequenceProp = sequenceProp/100,
adjSeqProp = sequenceProp * (100/Prcnt_Seqs_Class))
ct <-cor.test(pol_p$countProp, pol_p$adjSeqProp, method = "kendall")
# ct[["p.value"]] too small to write out. tau > 0.4 strong relationship
summary(model <-  lm(adjSeqProp ~ countProp, data = pol_p) )
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
ggplot(pol_p, aes(x = counProp, y = adjSeqProp)) +
geom_point() +
geom_smooth
ggplot(pol_p, aes(x = counProp, y = adjSeqProp)) +
geom_point() +
geom_smooth()
ggplot(pol_p, aes(x = countProp, y = adjSeqProp)) +
geom_point() +
geom_smooth()
ggplot(pol_p, aes(x = countProp, y = adjSeqProp)) +
geom_point()
ggplot(pol_p, aes(x = countProp, y = adjSeqProp)) +
geom_point() +
geom_smooth()
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
par(pty="s")
plot(x = pol_p$countProp,  pol_p$adjSeqProp,
xlim = c(0,1), ylim = c(0,1), axes = F, main = 'Correlation of Proportion Counted\nGrains and Sequence Reads',
xlab = 'Grains Counted', ylab = 'Classified Sequences',
pch=18, slty = 3, gap = 0.025)
axis(1)
axis(2)
abline(model)
text(0.3, 0.9, paste0("tau = ", round(ct[["estimate"]][["tau"]], 3)))
text(0.3, 0.8, "p < 0.001")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
knitr::include_graphics('../graphics/plots/pollen_ctab.pdf')
knitr::include_graphics('../assorted/plots/pollen_ctab.pdf')
knitr::include_graphics('../graphics/assorted/pollen_ctab.pdf')
knitr::include_graphics('../graphics/assorted/molecular_workflow.pdf')
knitr::include_graphics('../graphics/assorted/microscopy_workflow.pdf')
knitr::include_graphics('../graphics/assorted/pollen_ctab.pdf')
knitr::include_graphics('../graphics/tables/bombus_samples.pdf')
library(tidyverse)
setwd('~/Documents/nothingButNet')
source('scripts/functions.R')
p2d <- 'data'
files <- list.files(file.path(p2d, 'rmbl'), pattern = 'csv')
flr_ranks <- read.csv(
file.path(p2d, 'rmbl', files[grep('flower_ranks', files)] )) %>%
select(site, doy, week, tot.obs.length, habitat, plant.species:abun.rank)
observation_times <- read.csv(
file.path(p2d, 'rmbl', files[grep('queen_observations', files)]) ) %>%
select(site, week, tot.obs.length) %>%
distinct(site, week, .keep_all = T)
bee_obs <- read.csv(
file.path(p2d, 'rmbl', files[grep('queen_observations', files)]) ) %>%
filter(caste == 'q') %>%
mutate(species = gsub('\\..*$', '', species)) %>%
select(site, doy, week, tot.obs.length, species, plant.species,
resource.coll:pollen.collected, fl.switch.1:fl.switch.2.resource.coll) %>%
mutate(across(resource.coll:fl.switch.2.resource.coll, ~ na_if(.x, ''))) %>%
pivot_longer(c(plant.species, fl.switch.1, fl.switch.2),
names_to = 'observation', values_to = 'plant.species') %>%
drop_na(plant.species) %>%
group_by(site, week, species, plant.species) %>%
count(name = 'interactions') %>%
left_join(., observation_times, by = c("site", "week")) %>%
mutate(period = case_when(
week %in% 3:5 ~ 'Early',
week %in% 6:8 ~ 'Mid',
week %in% 9:11 ~ 'Late'
))
f <- list.files(file.path(p2d, 'raw'))
arranged_plants <- read.csv(file.path(p2d, 'raw', f[grep('species', f)])) %>%
pull(abbreviation)
arranged_bees <- unlist(strsplit(readLines(
file.path(p2d, 'raw', f[grep('bees', f)])), split = ','))
rm(p2d, files, f, observation_times)
bee_obs_wk <- bee_obs %>%
ungroup() %>%
group_by(species, plant.species, period) %>%
mutate(Interactions_total  = sum(interactions)) %>%
distinct(species, plant.species, period, .keep_all = T) %>%
select(species, plant.species, period, Interactions_total, tot.obs.length) %>%
ungroup(plant.species) %>%
mutate(n = sum(Interactions_total),
Percent = 100 * (Interactions_total/n))
resin <- bee_obs_wk %>%
select(-tot.obs.length, -n, -Interactions_total) %>%
mutate(plant.species = paste0(substr(plant.species, 1,1), '.',
gsub("^.*\\.", "", plant.species ))) %>%
pivot_wider(names_from = plant.species, values_from = Percent) %>%
mutate(
across(everything(), ~ if_else(.x < 1, 1, .x)),
across(everything(), ~replace_na(.x, 0))) %>%
arrange(period, species) %>%
split(., f = .$period) %>%
lapply(., column_to_rownames, 'species') %>%
lapply(., select, -period) %>%
lapply(., as.matrix)
# networks
tet <- lapply(resin, arrange_nets, col_arrange = arranged_plants,
row_arrange = arranged_bees)
rm(bee_obs_wk, resin, bee_obs)
observations_early <- tet[['Early']]
observations_mid <- tet[['Mid']]
observations_late <- tet[['Late']]
graphDrawer(observations_late, lbl_fnt = 14,
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 6,
col = 2
)
