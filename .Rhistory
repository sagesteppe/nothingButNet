pull(full)
netPage2(col_var = c('Kraken', 'Bracken', 'BLAST'), fname = 'Mosaiced_molecular_nets',
mainT = 'Comparision of Foraging Patterns from Three Sequence Alignment Algorithms',
row_var = c('Early', 'Mid', 'Late'), sep = '.')
360/35
10 * 1:35
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
rep(c(2.5,3,3.5,4.0), each = 1, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
rep(c(4,3.5,3,2.5), each = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
rep(c(2.5,4.5,3.5), each = 1, length.out =
length(which((positions > 245 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
library(here)
library(tidyverse)
library(igraph)
#set_here('~/Documents/floral_observations')  # move this to be the root of the project folder on your box
# i_am('~/Documents/floral_observations')
setwd('~/Documents/nothingButNet')
p2d <- file.path('data/raw')
files <- list.files(p2d, pattern = 'csv')
source('scripts/functions.R')
# BLAST IS MISSING SAMPLES!!!!!!!!!!!! LIKE 3- 12 ????!??!?!?!??!?!?!?!?
blast <- read.csv(file.path(p2d, files[grep('blast', files)])) %>%
select(sample.id, Taxon  = name, n = Seqs_pr_taxon) %>%
mutate('Method' = 'BLAST') %>%
drop_na()
bracken <- read.csv(file.path(p2d, files[grep('bracken', files)])) %>%
filter(taxonomy_lvl %in% c('S', 'G')) %>%
select(sample.id, Taxon, n = new_est_reads) %>%
mutate('Method' = 'Bracken')
kraken <- read.csv(file.path(p2d, files[grep('kraken', files)]))  %>%
select(sample.id = Sample, Taxon, n) %>%
mutate('Method' = 'Kraken')
arranged_plants <- read.csv(file.path(p2d, files[grep('species', files)])) %>%
pull(abbreviation)
plants_legend <- read.csv(file.path(p2d, files[grep('species', files)]))
seqs <- rbind(blast, bracken, kraken) %>%
mutate(sample.id = as.numeric(sample.id))
corbiculae <- read.csv(file.path(p2d, files[grep('Corbiculae', files)])) %>%
select(-site, -plant.species)
seqs <- left_join(seqs, corbiculae, by = 'sample.id')
p2d <- ('~/Documents/floral_observations/data')
files <- list.files(p2d, pattern = 'csv')
weeks <- read.csv(
paste0(p2d, '/', files[grep('queen_observations', files)]) )  %>%
select(date, week) %>%
distinct(date, .keep_all = T) %>%
mutate(period = case_when(
week %in% 3:5 ~ 'Early',
week %in% 6:8 ~ 'Mid',
week %in% 9:11 ~ 'Late'
))
seqs <- left_join(seqs, weeks, by = 'date') %>%
filter(caste == 'q') %>%
drop_na() %>%
mutate(bombus.species = gsub('Bombus.|.dark|.orange',  "", bombus.species)) %>%
select(Taxon, period, n, bombus.species, date, Method)
rm(blast, bracken, kraken, files, p2d, corbiculae, weeks)
arranged_bees <- c('bifarius', 'mixtus', 'rufocinctus', 'sylvicola',
'flavifrons',
'appositus', 'californicus', 'nevadensis',
'unknown')
bee_obs_wk <- seqs %>%
group_by(bombus.species, Taxon, period, Method) %>%
mutate(Interactions_total  = sum(n)) %>%
distinct(Taxon, bombus.species, period, .keep_all = T) %>%
select(bombus.species, Taxon, period, Interactions_total) %>%
ungroup(Taxon)
resin <- bee_obs_wk %>%  # if sp. we need to leave genus spelt out, if epithet present, than abbreviate species.
ungroup() %>%
mutate(periods = str_count(Taxon, pattern =  fixed('.'))) %>%
mutate(Taxon = str_replace(Taxon, " ", "."),
Taxon = if_else(periods == 0,  paste0(substr(Taxon, 1,1), '.',
gsub("^.*?\\.", "", Taxon )),
Taxon)) %>%
select(-periods) %>%
split(f = .$Method) %>%
map(~ .x  %>%
pivot_wider(names_from = Taxon, values_from = Interactions_total)
) %>%
bind_rows() %>%
split(f = list(.$Method, .$period) ) %>%
lapply(., select, -period, -Method) %>%
map(~ .x  %>%
column_to_rownames(., var = 'bombus.species') %>%
mutate(across(.cols = everything(), ~replace_na(.x, 0)))) %>%
map(., function(x){t(scales::rescale(t(x))) * 100}) %>% # scale big datasets.
map(., arrange_nets, col_arrange = arranged_plants, # now use the ARRANGE NET fun
row_arrange = arranged_bees) # to remove empty plants
list2env(resin,env = environment())
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
rep(c(2.5,3,3.5,4.0), each = 1, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
rep(c(4,3.5,3,2.5), each = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
rep(c(2.5,3.5,4.5), each = 1, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
rep(c(2.5,3.0,4.5), each = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
rep(c(1.5,2,2.5,3), each = 1, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
rep(c(3,2.5,2,1.5), each = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
rep(c(1.5,2,2.5,3), each = 1, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
rep(c(3,2.5,2,1.5), each = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
rep(c(1.5,2,2.5,3), each = 1, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
rep(c(4.5,3.5,2.5,1.5), each = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
rep(c(1.5,2,2.5,3), each = 1, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
rep(c(3,2.5,2,1.5), each = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
?seq
seq_along(from = 1, t0 = 4.5)
seq_along(from = 1, to = 4.5)
seq(from = 1, to = 4.5)
seq(from = 1, to = 4.5, length.out = 10)
seq(from = 1, to = 4.5, length.out = 5)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
seq(from = 1, to = 4.5, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
rep(from = 4.5, to = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
rep(from = 1, to = 4.5, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
rep(from = 4.5, to = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
seq(from = 1, to = 4.5, length.out = 10)
seq(from = 1, to = 4.5, length.out = length(resin))
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
seq(from = 1, to = 4.5, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
seq(from = 4.5, to = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
seq(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
seq(from = 1, to = 4.5, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
seq(from = 4.5, to = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
seq(from = 1, to = 4.5, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
seq(from = 4.5, to = 1, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
seq(from = 1, to = 4.5, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
seq(from = 4.5, to = 1, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
seq(from = 2, to = 5, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
seq(from = 5, to = 2, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
seq(from = 5, to = 2, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
seq(from = 2, to = 5, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
seq(from = 5, to = 2, length.out =
length(which((positions > 245 & positions < 270) == TRUE)))
positions <- c(222, 248, 268, 275)
seq(from = 5, to = 2, length.out =
length(which((positions > 245 & positions < 270) == TRUE)))
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
#' Give node labels rendering space
#'
#' 'vert_lab_position' specifies the positions for the labels of objects in the
#' graphs. It does not modify the label values, just positions and orientation.
#'
#' @param x = a matrix output from vertex_names
#' @seealso 'vertex_names', 'graphDrawer'
#' @export
vert_lab_position <- function(x){
nodes <- nrow(x) + ncol(x)
degrees <- 360/nodes
positions <- degrees * 1:nodes
degree_shift <- c(
rep(0, length(which((positions < 65) == TRUE))),
rep(-pi/2, length(which((positions > 65 & positions < 125) == TRUE))),
rep(pi, length(which((positions > 125 & positions < 245) == TRUE))),
rep(pi/2, length(which((positions > 245 & positions < 295) == TRUE))),
rep(0, length(which((positions > 295) == TRUE)))
# '0' right, '-pi/2' up, 'pi' left, 'pi/2' down
)
dist_vals <- c(
rep(4.5, length(which((positions < 65) == TRUE))),
seq(from = 2, to = 5, length.out =
length(which((positions > 65 & positions < 90) == TRUE))),
seq(from = 5, to = 2, length.out =
length(which((positions > 90 & positions < 125) == TRUE))),
rep(4.5, length(which((positions > 125 & positions < 245) == TRUE))),
seq(from = 2, to = 5, length.out =
length(which((positions > 245 & positions < 270) == TRUE))),
seq(from = 5, to = 2, length.out =
length(which((positions > 270 & positions < 295) == TRUE))),
rep(4.5, length(which((positions > 295) == TRUE)))
)
labels <- list('degree_shift' = degree_shift,
'dist_vals' = dist_vals)
return(labels)
}
graphDrawer(Bracken.Mid,
#   fname = 'Kraken.Late-test',
edge_clr = 'lightseagreen',
node_clrs  = c("#CEAB07", "deeppink2"),
legend_items = c("Bombus", "Plant"),
ntwrks_page = 9,
col = 3
)
